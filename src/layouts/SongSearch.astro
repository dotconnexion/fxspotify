---
const id = Astro.params.id;
const song = Astro.props.song;
const isBot = Astro.props.isBot;

let artists = [];
   
for (var i = 0; i < song.artists.length; i++) {
   artists.push(`${i === 0 ? '' : i+1 === song.artists.length ? ' and ' : ', '}${song.artists[i].name}`);
}
---
<!DOCTYPE html>
	<html lang="en" style="width: 100%; height: 100%;">
   	<head>
         <meta http-equiv="Content-Type" content="text/html;charset=utf-8">
         <meta http-equiv="refr!esh" content={`${isBot ? '2' : '0'};url=${song.external_urls.spotify}`}>
         <link rel="dns-prefetch" href="//api.spotify.com">
         <link rel="preconnect" href="https://api.spotify.com" crossorigin>
         <link rel="alternate" type="application/json+oembed" href={`${Astro.url.origin}/oembed.json?id=${id}`} />
         <title>{`${song.name} by ${artists.join('')}`}</title>
         <link href="https://api.fontshare.com/v2/css?f[]=satoshi@300,301,400,401,500,501,700,701,900,901&display=swap" rel="stylesheet">
         <meta property="description" content={song.preview_url ? `Song · ${artists.join('')}` : 'Sorry, this song is not available to preview on Spotify\'s public API. You can listen to it on their app.'} />
         <meta property="og:description" content={song.preview_url ? `Song · ${artists.join('')}` : 'Sorry, this song is not available to preview on Spotify\'s public API. You can listen to it on their app.'} />
         <meta property="og:image" content={song.album.images[0].url} />
         <meta property="og:site_name" content="FxSpotify"/>
         <meta property="og:title" content={song.name} />
         <meta property="og:video" content={song.preview_url} />
         <meta property="og:type" content="video.other" />
         <meta property="og:url" content={`https://open.spotify.com/track/${id}?utm_source=fxspotify`} />
         <meta property="og:video:height" content={song.album.images[0].height} />
         <meta property="og:video:secure_url" content={song.preview_url} />
         <meta property="og:video:type" content="video/mp4" />
         <meta property="og:video:width" content={song.album.images[0].width} />
         <meta property="og:video:release_date" content={song.album.release_date} />
         <meta property="theme-color" content="#1ed760" />
         <meta property="twitter:card" content="player" />
         <meta property="twitter:description" content={song.preview_url ? `Song · ${artists.join('')}` : 'Sorry, this song is not available to preview on Spotify\'s public API. You can listen to it on their app.'} />
         <meta property="twitter:image" content="0" />
         <meta property="twitter:player" content={`https://open.spotify.com/embed/track/${id}?utm_source=fxspotify`} />
         <meta property="twitter:player:height" content={song.album.images[0].height} />
         <meta property="twitter:player:stream" content={song.preview_url} />
         <meta property="twitter:player:stream:content_type" content="audio/mp3" />
         <meta property="twitter:player:width" content={song.album.images[0].width} />
         <meta property="twitter:site" content="spotify" />
         <meta property="twitter:title" content={song.name} />
         <meta property="twitter:url" content="https://open.spotify.com/track/${slug}?utm_source=fxspotify" />
      </head>
      <body style="display: flex; width: 100%; height: 100%; margin: 0; font-family: sans-serif">
	      <slot />
      </body>
</html>

<style is:global>
	:root {
      --black: 17, 17, 17;
      --white: 217, 216, 182;
	}

	html {
      background-color: rgb(var(--black));
      color: rgb(var(--white))
	}

   main, body {
      font-family: Satoshi, system-ui, sans-serif;
   }

   .text-white, a {
		color: rgb(var(--white));
	}

	h1,h2,h3,h4,h5,h6,p,span {
      font-family: Satoshi, system-ui, sans-serif;
	}

   main {
      margin: auto
   }
</style>